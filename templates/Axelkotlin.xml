<templateSet group="Axelkotlin">
  <template name="at" value="org.assertj.core.api.Assertions.assertThat($FIRST$).isEqualTo($END$)" description="assertJ assertThat" toReformat="false" toShortenFQNames="true">
    <variable name="FIRST" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="sa" value="val sa = org.assertj.core.api.SoftAssertions()&#10;$END$&#10;sa.assertAll()" description="Softassertions" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="test" value="@Test&#10;fun `$NAME$`() {&#10;  $END$&#10;}" description="kotlin test" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="pt" value="@org.junit.jupiter.api.TestInstance(TestInstance.Lifecycle.PER_CLASS)&#10;class SampleTest {&#10;&#10;    private fun testDataProvider() = Stream.of(&#10;        TestData(input = &quot;true&quot;, expected = &quot;expected&quot;)&#10;    )&#10;&#10;    @org.junit.jupiter.params.ParameterizedTest&#10;    @org.junit.jupiter.params.provider.MethodSource(&quot;testDataProvider&quot;)&#10;    fun `$NAME$`(testData: TestData) {&#10;        $END$&#10;    }&#10;&#10;    data class TestData(&#10;        val input: String,&#10;        val expected: String&#10;    )&#10;}" description="Junit5 ParametrizedTest" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="bef5" value="@org.junit.jupiter.api.BeforeEach&#10;fun `initialize`() {&#10;    $END$&#10;}" description="Junit 5 @BeforeEach block" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="test5" value="@org.junit.jupiter.api.Test&#10;fun `$NAME$`() {&#10;  $END$&#10;}" description="Junit5 testblock" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="att" value="org.assertj.core.api.Assertions.assertThatThrownBy {&#10;    $END$&#10;}.isInstanceOf(Exception::class.java)&#10;" description="assertThatThrows" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
</templateSet>