<templateSet group="Axelcustom">
  <template name="hets" value="@Override&#10;public boolean equals(Object other) {&#10;  return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(this, other);&#10;}&#10;&#10;@Override&#10;public int hashCode() {&#10;  return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(this);&#10;}&#10;&#10;@Override&#10;public String toString() {&#10;  return org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(this);&#10;}&#10;" description="Creates commons.lang3 hashCode equals and toString" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="ctl" value="Collectors.toList()" description="Collectors.toList()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="test" value="@Test&#10;public void $NAME$() {&#10;  $END$&#10;}" description="Creates a test method with a single assertion" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="at" value="org.assertj.core.api.Assertions.assertThat($FIRST$).isEqualTo($END$)&#10;" description="AssertJ Assertions.assertThat with isEqualTo" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="FIRST" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="range" value="IntStream.range(0, $END$)" description="initializes IntStream.range" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="bef" value="@org.junit.Before&#10;public void before_each() {&#10;  $END$&#10;}&#10;" description="JUnits @Before beforeEach" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="cts" value="Collectors.toSet()" description="Collectors.toSet()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="att" value="org.assertj.core.api.Assertions.assertThatThrownBy(() -&gt; {&#10;  $END$&#10;}).isInstanceOf(Exception.class);&#10;" description="assertjs assertThatThrownBy" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="hi" value="org.hamcrest.Matchers.hasItem($END$)" description="Matchers.hasItem" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="es" value="Collections.emptySet()" description="Collections.emptySet()" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="el" value="Collections.emptyList()" description="Collections.emptyList()" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>